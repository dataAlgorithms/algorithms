# get random numbers
def getRandomNum(num=60):

    import random

    lottery_numbers = range(-1000, 1000)
    
    winning_numbers = random.sample(lottery_numbers, num)
    
    print winning_numbers
    return winning_numbers

# bubble sort
def bubbleSort(theSeq):

    n = len(theSeq)
    for i in range(n-1):
        for j in range(n-i-1):
            if theSeq[j] > theSeq[j+1]:
                tmp = theSeq[j]
                theSeq[j] = theSeq[j+1]
                theSeq[j+1] = tmp
                
# insert sort
def insertSort(theSeq):

    n = len(theSeq)
    for i in range(1,n):
        pos = i
        pivot = theSeq[pos]
        while pos > 0 and pivot < theSeq[pos-1]:
            theSeq[pos] = theSeq[pos-1]
            pos = pos - 1

        theSeq[pos] = pivot
        
# select sort
def selectSort(theSeq):

    n = len(theSeq)
    for i in range(n-1):
        smallNdx = i
        for j in range(i+1, n):
            if theSeq[j] < theSeq[smallNdx]:
                smallNdx = j

        if smallNdx != i:
            tmp = theSeq[smallNdx]
            theSeq[smallNdx] = theSeq[i]
            theSeq[i] = tmp

# merge sort
def mergeSort(theSeq):

    n = len(theSeq)
    tmpList = [0] * n
    recMergeSort(theSeq, 0, n-1, tmpList)

def recMergeSort(theSeq, first, last, tmpList):

    if first >= last:
        return
    else:
        mid = (first + last) // 2
        recMergeSort(theSeq, first, mid, tmpList)
        recMergeSort(theSeq, mid+1, last, tmpList)
        mergeVitualSeq(theSeq, first, mid+1, last+1, tmpList)

def mergeVitualSeq(theSeq, left, right, end, tmpList):

    a = left
    b = right
    m = 0
    while a < right and b < end:
        if theSeq[a] < theSeq[b]:
            tmpList[m] = theSeq[a]
            m += 1
            a += 1
        else:
            tmpList[m] = theSeq[b]
            m += 1
            b += 1

    while a < right:
        tmpList[m] = theSeq[a]
        m += 1
        a += 1

    while b < end:
        tmpList[m] = theSeq[b]
        m += 1
        b += 1

    for i in range(end-left):
        theSeq[left+i] = tmpList[i]
  
def quickSort(theSeq):

    n = len(theSeq)
    recQuickSort(theSeq, 0, n-1)

def recQuickSort(theSeq, first, last):

    if first >= last:
        return
    else:
        pos = partitionSeq(theSeq, first, last) 
        recQuickSort(theSeq, first, pos-1)
        recQuickSort(theSeq, pos+1, last)

def partitionSeq(theSeq, first, last):

    pivot = theSeq[first]

    left = first + 1
    right = last
    while left <= right:
        while left <= right and theSeq[left] <= pivot:
            left += 1

        while right >= left and theSeq[right] >= pivot:
            right -= 1

        if left < right:
            theSeq[left], theSeq[right] = theSeq[right], theSeq[left]

    if first != right:
        theSeq[first] = theSeq[right]
        theSeq[right] = pivot

    return right
      
if __name__ == "__main__":
    print "Primary numbers:\r"
    theSeq = getRandomNum()
    
    print "Insert sorted numbers:\r"
    insertSort(theSeq)
    print theSeq
    
    print "\rPrimary numbers:\r"
    theSeq = getRandomNum()
    
    print "Bubble sorted numbers:\r"
    bubbleSort(theSeq)
    print theSeq
    
    print "\rPrimary numbers:\r"
    theSeq = getRandomNum()
    
    print "Select sorted numbers:\r"
    selectSort(theSeq)
    print theSeq
    
    print "\rPrimary numbers:\r"
    theSeq = getRandomNum()
    
    print "Merge sorted numbers:\r"
    mergeSort(theSeq)
    print theSeq
    
    print "\rPrimary numbers:\r"
    theSeq = getRandomNum()
    
    print "Quick sorted numbers:\r"
    quickSort(theSeq)
    print theSeq
    
'''
Primary numbers:
[487, -165, 966, 924, 73, 177, -43, -905, -171, 659, -462, -766, 232, 682, 213, -69, 245, 541, -156, -359, -120, 989, -913, -594, 194, -720, 821, -355, -274, -813, -961, 626, -948, -635, 234, -587, -386, 846, 373, -937, 795, -633, -325, -919, -348, 756, -670, 224, 991, 256, 496, -582, -826, 788, 527, -362, -374, 314, 619, 241]
Insert sorted numbers:
[-961, -948, -937, -919, -913, -905, -826, -813, -766, -720, -670, -635, -633, -594, -587, -582, -462, -386, -374, -362, -359, -355, -348, -325, -274, -171, -165, -156, -120, -69, -43, 73, 177, 194, 213, 224, 232, 234, 241, 245, 256, 314, 373, 487, 496, 527, 541, 619, 626, 659, 682, 756, 788, 795, 821, 846, 924, 966, 989, 991]

Primary numbers:
[315, 614, 409, -804, 738, 277, 327, 183, -648, 147, -737, 897, 856, -410, 402, 186, -139, 905, 669, 78, 692, -865, -111, -556, -13, 764, 148, -381, 644, 676, -741, -442, -968, 171, -32, -313, 865, -842, -656, 859, -946, -966, 573, 172, 489, 164, 95, -805, 983, -527, 524, -473, -832, 960, 236, -987, 502, 248, -419, -677]
Bubble sorted numbers:
[-987, -968, -966, -946, -865, -842, -832, -805, -804, -741, -737, -677, -656, -648, -556, -527, -473, -442, -419, -410, -381, -313, -139, -111, -32, -13, 78, 95, 147, 148, 164, 171, 172, 183, 186, 236, 248, 277, 315, 327, 402, 409, 489, 502, 524, 573, 614, 644, 669, 676, 692, 738, 764, 856, 859, 865, 897, 905, 960, 983]

Primary numbers:
[-109, 985, -312, 608, 281, -211, -314, 621, -837, -691, -33, 867, 808, 864, -729, -894, -301, 209, 353, -723, -810, 536, -763, -651, -549, 789, 510, 368, -421, 533, -749, 824, 302, 385, 246, 799, -57, -587, 461, 901, 725, -569, 407, 270, 73, -588, -612, 775, 940, 403, -712, 326, 574, -585, -911, 307, 42, 298, 892, 681]
Select sorted numbers:
[-911, -894, -837, -810, -763, -749, -729, -723, -712, -691, -651, -612, -588, -587, -585, -569, -549, -421, -314, -312, -301, -211, -109, -57, -33, 42, 73, 209, 246, 270, 281, 298, 302, 307, 326, 353, 368, 385, 403, 407, 461, 510, 533, 536, 574, 608, 621, 681, 725, 775, 789, 799, 808, 824, 864, 867, 892, 901, 940, 985]

Primary numbers:
[896, -640, 154, 647, -525, -520, 847, 848, 648, 908, 724, -41, -588, -568, -279, 769, 836, -644, 92, 81, -823, 459, -967, -480, -556, -479, 312, -584, 211, -627, -708, 742, -599, 546, -952, 76, 334, -430, -544, -239, 5, -771, 881, 241, 188, -55, 986, -432, 352, 857, -992, 710, -590, -661, -441, -615, -532, 310, 336, -49]
Merge sorted numbers:
[-992, -967, -952, -823, -771, -708, -661, -644, -640, -627, -615, -599, -590, -588, -584, -568, -556, -544, -532, -525, -520, -480, -479, -441, -432, -430, -279, -239, -55, -49, -41, 5, 76, 81, 92, 154, 188, 211, 241, 310, 312, 334, 336, 352, 459, 546, 647, 648, 710, 724, 742, 769, 836, 847, 848, 857, 881, 896, 908, 986]

Primary numbers:
[-269, -188, 60, -273, -600, -508, -957, 459, -61, 617, -488, -726, 794, 765, -106, 230, -780, -489, 581, -858, 337, -820, -596, -279, -229, -961, 72, 463, -910, -414, -89, -303, 603, -346, -541, 207, 948, -812, 269, -587, -224, 925, -897, 799, -838, -109, 814, 772, 927, -965, 53, 959, -513, -139, -143, 879, -676, -33, 757, 746]
Quick sorted numbers:
[-965, -961, -957, -910, -897, -858, -838, -820, -812, -780, -726, -676, -600, -596, -587, -541, -513, -508, -489, -488, -414, -346, -303, -279, -273, -269, -229, -224, -188, -143, -139, -109, -106, -89, -61, -33, 53, 60, 72, 207, 230, 269, 337, 459, 463, 581, 603, 617, 746, 757, 765, 772, 794, 799, 814, 879, 925, 927, 948, 959]

'''
